"""Criando um banco de dados e conectando"""

#Primeiro passo √© importar a biblioteca sqlite3
#Repare que n√£o √© necess√°ria nenhuma instala√ß√£o via pip. sqlite3 j√° vem com a instala√ß√£o base do Python.
#SGDBs diferentes v√£o conter algumas pequenas diferen√ßas entre si, bibliotecas diferentes interagem com bancos diferentes, consulte a documenta√ß√£o do seu SGDB.

import sqlite3

#A sqlite cria um arquivo para servir como banco de dados. Tirando esse detalhe a conex√£o com bancos de dados via python n√£o vai variar muito entre bancos.

#Instanciamos um objeto de conex√£o para conectar com o banco.
con = sqlite3.connect("exemplo.db") #Se o arquivo ainda n√£o existir, ele ser√° criado. Note a extens√£o do arquivo!

#O passo seguinte √© criar um cursor. Ele funciona como um ponteiro, um cliente de acesso ao banco que permite executar comandos.

cursor = con.cursor() #Repare como o cursor() √© instanciado na vari√°vel que criamos para conex√£o, se con mudar de nome, a instancia√ß√£o do cursor muda de nome tamb√©m.

print("Banco de dados conectado com sucesso!")

#At√© esta etapa temos nosso banco criado e conectado. Lembre-se sempre de fechar a conex√£o depois que terminar de us√°-la, veremos isso mais abaixo.

#########################################################################################################################################################


"""Criando uma tabela no banco"""

#Precisamos utilizar nosso cursor para executar comandos.
#Os comandos no banco s√£o feitos em SQL (N√£o se preocupe se o c√≥digo SQL n√£o parecer muito claro por enquanto).

cursor.execute(""" CREATE TABLE IF NOT EXISTS cliente (
               id INTEGER PRIMARY KEY AUTOINCREMENT,
               nome TEXT NOT NULL,
               email TEXTO NOT NULL); """)

#A sintaxe SQL √© bem simples, os comandos s√£o normalmente digitados em mai√∫sculo, e s√£o bem diretos. N√≥s estudaremos SQL em detalhe!

print("Tabela criada com sucesso!")

#Apenas utilizar o comando execute n√£o √© o suficiente para fazer as altera√ß√µes
#Para salvar as altera√ß√µes precisamos fazer um commit (isso lembra algo? üòÄ)

con.commit() #Executa a altera√ß√£o no banco

con.close() #Fecha a conex√£o com o banco! Sempre lembre-se de fechar a conex√£o!

